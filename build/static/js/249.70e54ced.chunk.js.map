{"version":3,"file":"static/js/249.70e54ced.chunk.js","mappings":"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","sources":["components/UI/sidebarLink/MySidebarLink.jsx","components/UI/slide/MySlide.jsx","components/UI/subCart/MySubCart.jsx","components/UI/myPortfInner/MyPortInner.jsx"],"sourcesContent":["import \"./mySidebarLink.scss\";\r\n\r\nconst MySidebarLink = ({ children, handler, index, activeIndex }) => {\r\n  return (\r\n    <div\r\n      onClick={() => handler(index)}\r\n      className={`sidebar__link ${activeIndex === index ? \"change\" : \"\"}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MySidebarLink;\r\n","import \"./mySlide.scss\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { forwardRef } from \"react\";\r\n\r\nconst MySlide = forwardRef(({ children, photo, date, path }, ref) => {\r\n  return (\r\n    <div ref={ref} className=\"portfolio-content\">\r\n      {photo.map((el, index) => (\r\n        <div key={index} className=\"portfolio-content__item\">\r\n          <Link\r\n            to={`/case/${path}`}\r\n            className=\"portfolio-content__item-content\"\r\n          >\r\n            <img loading=\"lazy\" src={el.path} alt=\"main-photo\" />\r\n          </Link>\r\n        </div>\r\n      ))}\r\n\r\n      <Link to={`/case/${path}`} className=\"portfolio-content__item-title\">\r\n        {children} <span>{date ? dayjs(date).format(\"DD.MM.YYYY\") : null}</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MySlide;\r\n","import \"./mySubCart.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst MySubCart = ({ post, key }) => {\r\n  console.log(post);\r\n  return (\r\n    <Link\r\n      to={`/case/${post._id}`}\r\n      key={key + 1}\r\n      className=\"portfolio-grid__item\"\r\n    >\r\n      <img src={post.prewieImg[0]?.path} alt={post.name} />\r\n      <div className=\"portfolio-grid__title\">\r\n        {post.name}{\" \"}\r\n        <span>\r\n          {post.date ? `/${dayjs(post.date).format(\"DD.MM.YYYY\")}` : null}\r\n        </span>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MySubCart;\r\n","import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Mousewheel, Keyboard } from \"swiper/modules\";\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/mousewheel\";\r\n\r\nimport { gsap } from \"gsap\";\r\n\r\nimport MySidebarLink from \"../sidebarLink/MySidebarLink\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./myPortInner.scss\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useScrollbarAwareWidth } from \"../../../hook/useScrollbarAwareWidth\";\r\n\r\nimport MySlide from \"../slide/MySlide\";\r\nimport { getDir } from \"../../../API/dir\";\r\n\r\nimport {\r\n  CommentOutlined,\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  EnterOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { FaTelegramPlane, FaInstagram, FaWhatsapp } from \"react-icons/fa\";\r\nimport { FloatButton, Switch, Modal, Button } from \"antd\";\r\nimport MySubCart from \"../subCart/MySubCart\";\r\nimport ModalForRepost from \"../modalForRepost/ModalForRepost\";\r\n\r\nconst MyPortInner = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isModalPort, setIsModalPort] = useState(false);\r\n\r\n  const [viewMode, setViewMode] = useState(false);\r\n  const swiperRef = useRef(null);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const slideRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getDir());\r\n  }, [dispatch]);\r\n\r\n  const dirs = useSelector((state) => state.dirs.dirs).filter(\r\n    (item) => item.inPortfolio\r\n  );\r\n\r\n  const handleSlideChange = (index) => {\r\n    if (swiperRef.current) {\r\n      swiperRef.current.slideTo(index);\r\n      setActiveIndex(index);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Анимация при смене активного слайда\r\n    animateSlide(activeIndex);\r\n  }, [activeIndex]);\r\n\r\n  const animateSlide = (index) => {\r\n    const slideElement = gsap.utils.selector(slideRefs.current[index]); // Получаем DOM-элемент активного слайда\r\n\r\n    if (slideElement) {\r\n      gsap.from(slideElement(\".portfolio-content__item-content\"), {\r\n        delay: 0.85,\r\n        stagger: 0.1,\r\n        opacity: 0,\r\n        scale: 1.2,\r\n      });\r\n      gsap.from(slideElement(\".portfolio-content__item-title\"), {\r\n        x: 100,\r\n        opacity: 0,\r\n        duration: 1.5,\r\n        ease: \"power2.inOut\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChange = (checked) => {\r\n    setViewMode(checked);\r\n  };\r\n\r\n  const sliderRef = useRef(null);\r\n  const gridRef = useRef(null);\r\n  const wrapperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (viewMode) {\r\n      gsap.to(wrapperRef.current, {\r\n        onComplete: () => {\r\n          wrapperRef.current.style.position = \"fixed\";\r\n        },\r\n      });\r\n      gsap.to(gridRef.current, {\r\n        autoAlpha: 0,\r\n        onComplete: () => {\r\n          gridRef.current.style.display = \"none\";\r\n        },\r\n      });\r\n      gsap.to(sliderRef.current, {\r\n        autoAlpha: 1,\r\n        duration: 0.5,\r\n        delay: 0.5,\r\n      });\r\n    } else {\r\n      gsap.to(wrapperRef.current, {\r\n        onComplete: () => {\r\n          wrapperRef.current.style.position = \"sticky\";\r\n        },\r\n      });\r\n      gsap.to(sliderRef.current, { autoAlpha: 0, duration: 0.5 });\r\n      gsap.to(gridRef.current, {\r\n        autoAlpha: 1,\r\n        duration: 0.5,\r\n        delay: 0.5,\r\n        onComplete: () => {\r\n          gridRef.current.style.display = \"block\";\r\n        },\r\n      });\r\n    }\r\n  }, [viewMode]);\r\n\r\n  const containerWidthWidget = useScrollbarAwareWidth(wrapperRef);\r\n  const containerWidthScroller = useScrollbarAwareWidth(sliderRef);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <div\r\n          ref={sliderRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: containerWidthScroller || \"100%\",\r\n            minHeight: \"100%\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <div className=\"wrapper-grid\">\r\n            <div className=\"wrapper-grid__item\">\r\n              <Swiper\r\n                direction=\"vertical\"\r\n                mousewheel={true}\r\n                keyboard={{ enabled: true, onlyInViewport: true }}\r\n                modules={[Mousewheel, Keyboard]}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n                spaceBetween={20}\r\n                slidesPerView={1}\r\n                onSlideChange={(swiper) => setActiveIndex(swiper.activeIndex)}\r\n                onSwiper={(swiper) => {\r\n                  swiperRef.current = swiper;\r\n                }}\r\n                lazy={{\r\n                  loadPrevNext: true, // аналог lazyPreloadPrevNext\r\n                }}\r\n              >\r\n                {dirs.map((post, index) => (\r\n                  <SwiperSlide key={index}>\r\n                    <MySlide\r\n                      ref={(el) => (slideRefs.current[index] = el)}\r\n                      key={index}\r\n                      photo={post.prewieImg}\r\n                      date={post.date}\r\n                      path={post._id}\r\n                      className=\"swiper-lazy\"\r\n                    >\r\n                      {post.name}\r\n                    </MySlide>\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Swiper>\r\n            </div>\r\n            <div className=\"wrapper-grid__item\">\r\n              <div className=\"sidebar\">\r\n                <div className=\"sidebar__list-wrapper\">\r\n                  <ul className=\"sidebar__list\">\r\n                    {dirs.map((post, index) => (\r\n                      <li key={post._id}>\r\n                        <MySidebarLink\r\n                          handler={handleSlideChange}\r\n                          index={index}\r\n                          activeIndex={activeIndex}\r\n                        >\r\n                          {post.name}\r\n                        </MySidebarLink>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          ref={gridRef}\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"none\",\r\n            opacity: 0,\r\n          }}\r\n        >\r\n          <div className=\"portfolio-grid\">\r\n            {dirs.map((post, index) => (\r\n              <MySubCart post={post} key={post._id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        ref={wrapperRef}\r\n        style={{ width: containerWidthWidget || \"100%\" }}\r\n        className=\"wrapper-widget\"\r\n      >\r\n        <div className=\"wrapper-widget__contacts\">\r\n          <p>Напиши мне</p>\r\n          <FloatButton.Group\r\n            trigger=\"click\"\r\n            icon={<CommentOutlined />}\r\n            shape=\"square\"\r\n            style={{ bottom: \"36px\" }}\r\n          >\r\n            <a\r\n              style={{ borderRadius: \"8px\" }}\r\n              href=\"https://t.me/vi_bratygina\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FloatButton\r\n                style={{\r\n                  borderStartStartRadius: \"8px\",\r\n                  borderStartEndRadius: \"8px\",\r\n                }}\r\n                shape=\"square\"\r\n                icon={<FaTelegramPlane />}\r\n              />\r\n            </a>\r\n\r\n            <a\r\n              style={{ borderRadius: \"8px\" }}\r\n              href=\"https://wa.me/79063649891\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FloatButton\r\n                style={{\r\n                  borderEndStartRadius: \"8px\",\r\n                  borderEndEndRadius: \"8px\",\r\n                }}\r\n                shape=\"square\"\r\n                icon={<FaWhatsapp />}\r\n              />\r\n            </a>\r\n          </FloatButton.Group>\r\n        </div>\r\n        <div className=\"wrapper-widget__contacts\">\r\n          <p style={{ width: \"140px\", right: \"66px\" }}>Поделиться ссылкой</p>\r\n          <FloatButton.Group\r\n            icon={<CommentOutlined size={48} />}\r\n            shape=\"square\"\r\n            style={{ bottom: \"36px\" }}\r\n          >\r\n            <FloatButton\r\n              onClick={() => setIsModalPort(true)}\r\n              shape=\"square\"\r\n              icon={\r\n                <EnterOutlined\r\n                  size={48}\r\n                  style={{ transform: \"rotate(180deg)\" }}\r\n                />\r\n              }\r\n            />\r\n          </FloatButton.Group>\r\n        </div>\r\n\r\n        <FloatButton.Group\r\n          type=\"primary\"\r\n          style={{ bottom: \"36px\" }}\r\n          icon={<CommentOutlined />}\r\n        >\r\n          <div className=\"wrapper-widget_switch\">\r\n            Режим слайда\r\n            <Switch\r\n              onChange={onChange}\r\n              checkedChildren={<CheckOutlined />}\r\n              unCheckedChildren={<CloseOutlined />}\r\n              style={{ marginLeft: \"5px\" }}\r\n            />\r\n          </div>\r\n        </FloatButton.Group>\r\n\r\n        <Modal\r\n          open={isModalPort}\r\n          onCancel={() => {\r\n            setIsModalPort(false);\r\n          }}\r\n          footer={[\r\n            <Button\r\n              key=\"Cancel\"\r\n              onClick={() => {\r\n                setIsModalPort(false);\r\n              }}\r\n            >\r\n              Отмена\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <ModalForRepost />\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPortInner;\r\n"],"names":["_ref","children","handler","index","activeIndex","_jsx","onClick","className","concat","forwardRef","ref","photo","date","path","_jsxs","map","el","Link","to","loading","src","alt","dayjs","format","_post$prewieImg$","post","key","console","log","_id","prewieImg","name","MyPortInner","dispatch","useDispatch","isModalPort","setIsModalPort","useState","viewMode","setViewMode","swiperRef","useRef","setActiveIndex","slideRefs","useEffect","getDir","dirs","useSelector","state","filter","item","inPortfolio","handleSlideChange","current","slideTo","animateSlide","slideElement","gsap","utils","selector","from","delay","stagger","opacity","scale","x","duration","ease","sliderRef","gridRef","wrapperRef","onComplete","style","position","autoAlpha","display","containerWidthWidget","useScrollbarAwareWidth","containerWidthScroller","_Fragment","top","left","width","minHeight","overflow","Swiper","direction","mousewheel","keyboard","enabled","onlyInViewport","modules","Mousewheel","Keyboard","height","spaceBetween","slidesPerView","onSlideChange","swiper","onSwiper","lazy","loadPrevNext","SwiperSlide","MySlide","MySidebarLink","MySubCart","FloatButton","Group","trigger","icon","CommentOutlined","shape","bottom","borderRadius","href","target","rel","borderStartStartRadius","borderStartEndRadius","FaTelegramPlane","borderEndStartRadius","borderEndEndRadius","FaWhatsapp","right","size","EnterOutlined","transform","type","Switch","onChange","checked","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","marginLeft","Modal","open","onCancel","footer","Button","ModalForRepost"],"sourceRoot":""}